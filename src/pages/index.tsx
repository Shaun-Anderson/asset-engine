import type { GetServerSideProps, NextPage } from "next";
import { getSession, signIn, useSession } from "next-auth/react";
import Head from "next/head";
import { trpc } from "../utils/trpc";

import {
  LineChart,
  Line,
  CartesianGrid,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
  Legend,
  Area,
  AreaChart,
  BarChart,
  ReferenceLine,
  Bar,
} from "recharts";
import { Card } from "../components/design-system/Card";
import { Heading } from "../components/design-system";
import { ReactElement } from "react";
import Layout from "../components/layout";

const data = [
  {
    name: "JAN",
    expenses: -4000,
    profit: 2400,
  },
  {
    name: "FEB",
    expenses: -3000,
    profit: 1398,
  },
  {
    name: "MAR",
    expenses: -2000,
    profit: 9800,
  },
  {
    name: "APR",
    expenses: -2780,
    profit: 3908,
  },
  {
    name: "MAY",
    expenses: -1890,
    profit: 4800,
  },
  {
    name: "JUN",
    expenses: -2390,
    profit: 3800,
  },
  {
    name: "JUL",
    expenses: -3490,
    profit: 4300,
  },
];

const getIntroOfPage = (label) => {
  if (label === "Page A") {
    return "Page A is about men's clothing";
  }
  if (label === "Page B") {
    return "Page B is about women's dress";
  }
  if (label === "Page C") {
    return "Page C is about women's bag";
  }
  if (label === "Page D") {
    return "Page D is about household goods";
  }
  if (label === "Page E") {
    return "Page E is about food";
  }
  if (label === "Page F") {
    return "Page F is about baby food";
  }
  return "";
};

const CustomTooltip = ({ active, payload, label }) => {
  if (active && payload && payload.length) {
    return (
      <div className="p-4 bg-white/80 border rounded-lg backdrop-blur-sm">
        <p className="label">{`${label}`}</p>
        <p className="label">{`Profit : ${payload[0].value}`}</p>
        <p className="label">{`Expenses : ${payload[0].value}`}</p>
        <p className="intro">{getIntroOfPage(label)}</p>
        <p className="desc">Anything you want can be displayed here.</p>
      </div>
    );
  }

  return null;
};

const RenderLineChart = () => {
  return (
    <div>
      <ResponsiveContainer width="100%" height={200}>
        <BarChart
          // width={500}
          // height={200}
          data={data}
          stackOffset="sign"
          margin={{
            top: 5,
            right: 30,
            left: 20,
            bottom: 5,
          }}
        >
          {/* <CartesianGrid strokeDasharray="5 5" strokeOpacity={0.2} /> */}
          <XAxis
            dataKey="name"
            axisLine={false}
            angle={90}
            // offset={100}
            height={40}
            tickLine={false}
            tickMargin={20}
            fontSize={12}
          />
          <YAxis strokeOpacity={0.5} fontSize={12} tickLine={false} />
          <Tooltip content={<CustomTooltip />} />
          {/* <Legend verticalAlign="top" height={36} /> */}
          <ReferenceLine
            y={0}
            strokeLinecap="round"
            strokeOpacity={0.2}
            stroke="#000"
          />
          <Bar
            dataKey="profit"
            fill="#82ca9d"
            stackId="stack"
            radius={[1000, 1000, 0, 0]}
          />
          <Bar
            dataKey="expenses"
            fill="#FF0000"
            stackId="stack"
            radius={[1000, 1000, 0, 0]}
          />
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getSession(context);
  console.log("TEST THIS ");
  console.log(session);
  if (!session) {
    return {
      redirect: {
        destination: "/api/auth/signin",
        permanent: false,
      },
    };
  }

  return {
    props: { session },
  };
};

const Home: NextPage = () => {
  const { data } = useSession();

  if (!data)
    return (
      <div className="flex grow flex-col items-center justify-center">
        <div className="text-2xl font-bold">Please log in below</div>
        <div className="p-4" />
        <button
          onClick={() => signIn("google")}
          className="flex items-center gap-2 rounded bg-gray-200 px-4 py-2 text-2xl text-black"
        >
          <span>Sign in with Twitch</span>
        </button>
      </div>
    );

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex flex-col p-4">
        <Heading as={"h1"} size={2}>
          ðŸ‘‹ Welcome,
        </Heading>
        <Heading as="h2" size="1">
          {data.user?.name}
        </Heading>
        <div className="grid grid-cols-12 gap-3 pt-3 mt-3 ">
          <div className="col-span-12 ">
            <RenderLineChart />
          </div>
          <div className="col-span-12 flex flex-col gap-4">
            <Card css={{ p: "$4" }}>tset</Card>
          </div>
        </div>
      </main>
    </>
  );
};

Home.getLayout = function getLayout(page: ReactElement) {
  return <Layout>{page}</Layout>;
};

export default Home;
